plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
    id 'war'
	id 'groovy'
}

group = 'uk.ac.leedsbeckett'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.spockframework:spock-core:2.2-M1-groovy-3.0'
	testImplementation 'org.spockframework:spock-spring:2.2-M1-groovy-3.0'
	testImplementation 'org.codehaus.groovy:groovy-all:3.0.10'
	testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
	testImplementation 'org.gebish:geb-spock:5.1'
	implementation 'org.springframework.security:spring-security-test'

	testImplementation 'org.seleniumhq.selenium:selenium-firefox-driver:4.1.4'
	testImplementation 'org.seleniumhq.selenium:selenium-support:4.1.4'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

}
/*
tasks.register('processFrontendResources', Copy) {
	// Directory containing the artifacts in the frontend project
	def frontendBuildDir = file("${project(':frontend').buildDir}/www")
	// Directory where the frontend artifacts must be copied to be packaged alltogether with the backend by the 'war'
	// plugin.
	def frontendResourcesDir = file("${project.buildDir}/resources/templates/public")

	group 'Frontend'
	description 'Process frontend resources'
	dependsOn project(':frontend').tasks.named('assembleFrontend')

	from frontendBuildDir
	into frontendResourcesDir
}

tasks.named('processResources') {
	dependsOn tasks.named('processFrontendResources')
}


 */
tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false //strangely enough, this creates only the one jar we need
}

